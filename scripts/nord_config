#!/bin/bash
shopt -s nocasematch

## Apply settings
[[ -n ${DNS} ]] && nordvpn set dns ${DNS//[;,]/ } | grep -Eiv -f /opt/inv-grep
[[ -n ${CYBER_SEC} && ${CYBER_SEC} =~ (true|false) ]] && nordvpn set cybersec ${CYBER_SEC} | grep -Eiv -f /opt/inv-grep
if [[ ! ${TECHNOLOGY:-NordLynx} =~ (NordLynx|OpenVPN) ]]
then
  echo -e "WARNING\tUnsupported TECHNOLOGY value (${TECHNOLOGY}); defaulting to 'NordLynx'."
  TECHNOLOGY="NordLynx"
fi
nordvpn set technology ${TECHNOLOGY:-NordLynx} | grep -Eiv -f /opt/inv-grep
[[ -n ${OBFUSCATE} && ${OBFUSCATE} =~ (true|false) ]] && nordvpn set obfuscate ${OBFUSCATE} | grep -Eiv -f /opt/inv-grep
[[ -n ${PROTOCOL} && ${PROTOCOL} =~ (udp|tcp) ]] && nordvpn set protocol ${PROTOCOL} | grep -Eiv -f /opt/inv-grep

[[ -n ${PORTS} ]] && for port in ${PORTS//[;,]/ }
do
  nordvpn whitelist add port ${port} | grep -Eiv -f /opt/inv-grep
done
[[ -n ${PORT_RANGE} ]] && nordvpn whitelist add ports ${PORT_RANGE} | grep -Eiv -f /opt/inv-grep

## Whitelist local IPv4 networks
netReg="${dnsReg}/[0-9]{1,2}"
docker_networks=$(dockerNetworks)
if [[ -n ${docker_networks} ]]
then
  IFS=',' read -ra networks <<< "$docker_networks"
  for net in "${networks[@]}"
  do
  IFS=" " read -r -a network <<< "$net"
    nordvpn whitelist add subnet ${network[1]} | grep -Eiv -f /opt/inv-grep
  done
fi
[[ -n ${NETWORK} && -z ${NET_LOCAL} ]] && NET_LOCAL=${NETWORK}
[[ -n ${NET_LOCAL} && ${NET_LOCAL} =~ ${netReg} ]] && for net in ${NET_LOCAL//[;,]/ }
do
  nordvpn whitelist add subnet ${net} | grep -Eiv -f /opt/inv-grep
done
exit 0
